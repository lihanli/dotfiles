if defined?(ActiveRecord) && Rails.env.development?
  ActiveRecord::Base.logger = Logger.new(STDOUT)
end

def pbcopy(str)
  command = if (/darwin/ =~ RUBY_PLATFORM) != nil
    'pbcopy'
  elsif system('which clip.exe')
    'clip.exe'
  else
    'xclip -selection clipboard'
  end

  IO.popen(command, 'r+') {|io| io.puts str }
  output.puts "-- Copy to clipboard --\n#{str}"
end

def lihan_median(array)
  return nil if array.empty?
  sorted = array.sort
  len = sorted.length
  (sorted[(len - 1) / 2] + sorted[len / 2]) / 2.0
end

Pry.config.commands.command "hiscopy", "History copy to clipboard" do |n|
  pbcopy pry_instance.input_array[n ? n.to_i : -1]
end

Pry.config.commands.command "copy", "Copy to clipboard" do |str|
  unless str
    str = "#{pry_instance.input_array[-1]}#=> #{pry_instance.last_result}\n"
  end
  pbcopy str
end

Pry.config.commands.command "lastcopy", "Last result copy to clipboard" do
  pbcopy pry_instance.last_result.chomp
end

def load_rails
  rails = File.join Dir.getwd, 'config', 'environment.rb'

  if File.exist?(rails)
    require rails

    require 'rails/console/app'
    require 'rails/console/helpers'
    TOPLEVEL_BINDING.eval('self').extend ::Rails::ConsoleMethods
    puts 'rails loaded'
  end
end
